# 유저 프로필 기반 그룹 분석 및 호감도 측정 시스템

## 프로젝트 개요

이 시스템은 **유저 프로필** 데이터를 기반으로 **K-Means 클러스터링**을 통해 유저들을 여러 그룹으로 분류하고, **유저 간의 호감도(유사도)**를 계산하여 각 그룹 내에서 유저들이 얼마나 유사한지(호감도)를 측정합니다. 또한, **OpenAI API**를 사용하여 각 그룹의 특징을 분석하고, 그룹 내 유저들이 서로에게 끌릴만한 **질문 리스트**를 자동으로 생성하는 기능을 포함합니다.

이를 통해, 유저들이 상호작용을 촉진할 수 있는 유용한 도구를 제공합니다.



## 주요 기능

#### 1. 유저 그룹 분류 (K-Means 클러스터링)
- 엑셀 파일로 제공된 유저 프로필 데이터를 바탕으로 유저들을 N개의 그룹으로 자동으로 분류합니다.
- 그룹화는 유저들의 취향, 성격, 직업, 취미 등의 **범주형 데이터**와 **나이, 키, 몸무게** 같은 **수치형 데이터**를 기반으로 이루어집니다.
#### 2. 유저 간 호감도 측정 (Cosine Similarity)
- 각 그룹 내 유저들 간의 **코사인 유사도**를 계산하여, 각 유저가 그룹 내 다른 유저들과 얼마나 비슷한지 측정합니다.
- **유사도 매트릭스**를 생성하여 유저들 간의 유사도를 보여주고, 각 유저의 **평균 호감도**를 계산하여 표시합니다.
#### 3. OpenAI API를 통한 그룹 분석 및 질문 리스트 생성
- **OpenAI GPT-4**를 사용하여 각 그룹의 특성을 분석하고, 해당 그룹 내 유저들이 서로에게 호감을 가질만한 이유를 제시합니다.
- 추가적으로, 그룹 내 유저들이 서로에게 **궁금해할 만한 질문 리스트**를 자동으로 생성하여 제안합니다.



## 주요 라이브러리 및 API

- **Streamlit**: 웹 인터페이스로 사용자와 상호작용할 수 있는 화면을 제공하는 파이썬 기반의 웹 프레임워크입니다.
- **Pandas**: 유저 데이터를 엑셀 파일로부터 읽어오고, 데이터프레임으로 처리하는 데 사용됩니다.
- **Scikit-learn (K-Means)**: 유저들을 그룹으로 나누기 위해 **K-Means 클러스터링** 알고리즘을 사용합니다.
- **Cosine Similarity**: 각 유저의 프로필 데이터를 기반으로 유사도를 측정하는 데 사용됩니다.
- **OpenAI API**: GPT-4 모델을 사용하여 그룹 분석과 질문 리스트 생성을 자동화합니다.



## 설치 및 실행 방법
#### 1. 필수 라이브러리 설치
- 프로젝트를 실행하기 전에 다음 라이브러리를 설치해야 합니다:
```bash
pip install streamlit pandas scikit-learn openai
```

#### 2. OpenAI API 키 설정
- OpenAI API를 사용하기 위해서는 OpenAI에서 제공하는 **API 키**가 필요합니다. 코드를 실행하기 전에 `openai.api_key` 부분에 자신의 OpenAI API 키를 입력하세요.

#### 3. Streamlit 서버 실행
- 터미널에서 다음 명령어를 실행하여 Streamlit 서버를 시작합니다:
```bash
streamlit run your_script.py
```

#### 4. 엑셀 파일 업로드
- 웹 인터페이스에서 엑셀 파일을 업로드하여 유저 데이터를 입력할 수 있습니다.
- 엑셀 파일에는 **유저 프로필** 데이터가 포함되어 있어야 하며, 필수 컬럼은 다음과 같습니다
	- `User ID`, `Preference` (취향), `MBTI`, `Job` (직업), `Hobby` (취미), `Age` (나이), `Gender` (성별), `Height` (키), `Weight` (몸무게), `Ideal Type` (이상형)
	- 엑셀파일 예제

#### 5. 그룹 개수 설정
- 유저 데이터를 업로드한 후, 원하는 그룹 개수를 설정합니다. 예를 들어, 3개의 그룹으로 나누고 싶다면 해당 개수를 설정합니다.

#### 6. 그룹 분류 및 분석 실행
- 설정한 그룹 개수에 따라 K-Means 클러스터링이 적용되어 유저들이 그룹으로 나뉘고, 각 그룹의 유저들 간 유사도를 계산하여 호감도를 측정합니다.


## 계산 방법

### 1. K-Means 클러스터링
- **K-Means 클러스터링**은 대규모 데이터를 효율적으로 그룹으로 나눌 수 있는 **비지도 학습 알고리즘**입니다. 이 알고리즘은 다음과 같은 이유로 사용됩니다
	1. K-Means는 상대적으로 간단한 알고리즘으로, 매우 빠르게 결과를 도출할 수 있어 큰 규모의 데이터에도 적합
	2. 유저들의 **취향, 직업, 나이 등 다양한 특성**을 기반으로 유사한 특성을 가진 유저들을 그룹화 가능
	3. 데이터 분포에 대한 가정 없이, 데이터 간의 거리(유사도)를 기준으로 그룹을 나눔.
	4. K-Means는 각 그룹의 중심(centroid)을 계산하여, 유저들이 각 중심에 얼마나 가까운지를 기반으로 그룹을 나누기 때문에, **명확한 중심을 가진 그룹**을 형성하기 좋음.
- 유저들의 프로필 데이터(취향, 성격, 직업 등)와 수치형 데이터(나이, 키, 몸무게)를 기반으로, 유사한 유저들끼리 그룹으로 묶습니다.
- K-Means 알고리즘
	1. 초기 중심점 설정 (알고리즘이 임의로 K개의 중심점을 선택)
	2. 각 유저는 자신과 가장 가까운 중심점이 있는 그룹에 할당
	3. 각 그룹에 속한 유저들의 평균 위치를 기반으로 새로운 중심점을 계산
	4. 이 과정을 중심점이 더 이상 변하지 않을 때까지 반복하여, 최적의 그룹 구성을 찾음.

### 2. 유저 간 유사도 계산 (호감도)
- 유저들 간의 유사도는 **코사인 유사도(Cosine Similarity)**를 사용하여 계산
- 이는 두 유저의 특성 벡터 간의 코사인 각도를 기반으로 유사도를 측정하는 방법
- 유사도가 1에 가까울수록 두 유저의 특성이 유사하고, 0에 가까울수록 유사하지 않다는 의미. (코사인 특성)
- 유사도 매트릭스를 통해 각 유저 간의 호감도를 확인 가능.

### 3. OpenAI 기반 그룹 분석 및 질문 생성
- 그룹 내 유저들의 데이터를 바탕으로 **OpenAI GPT-4** 모델에 그룹 분석을 요청.
- OpenAI는 그룹의 특성을 요약하고, 해당 그룹 내에서 서로에게 호감을 가질만한 이유를 제시하며, 서로에게 궁금해할만한 **질문 리스트**를 생성


#### 문의 및 개선 제안

문의사항이나 개선 제안이 있다면, 이슈를 등록해주시기 바랍니다.